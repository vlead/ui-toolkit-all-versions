#+OPTIONS: num:nil toc:nil 
#+TITLE:
#+STYLE: <link rel="stylesheet" type="text/css" href="style.css" />

[[file:../images/logo.jpg]]

[[file:./index.html][Systems and Software Virtual Lab]]

*  File Management

** Introduction

Welcome to File Management, the first experiment of the Systems and Software lab. File Management consists of creating files and folders, copying and moving them locally etc. The goal of this experiment is to teach how to manipulate files and folders on a Linux Machine. The theory section provides a brief overview of the linux commands which are required to do file management.
The experimental platform for this experiment is a command line interface which mimics the terminal of a linux machine. The command line interface supports a few basic commands to enable the user to learn file management basics. The experiment contains the command line interface and an instructor section (in green background) below it. The instructor section guides the user to peform the experiment which is a series of tasks.
Proceed to the theory section to get an overview of the commands. Then move to the experiment section to get some hands-on experience and finish the experiment tasks. After you are done with the experiment, go to the quiz section to test your understanding.


[[file:../images/manual.jpg]]

** Theory

 1. Viewing the contents of a directory using the ls command:
     The ls command is used to list the contents of a directory. When it is executed with no arguments, it lists the contents of the current working directory. In order to know the current working directory execute the command pwd.
   

#+BEGIN_SRC shell

johndoe@laptop:~/Documents$ pwd
/home/johndoe/Documents

johndoe@laptop:~/Documents$ ls
example.txt  all_about_console.txt my_project

johndoe@laptop:~/Documents$ ls /var/
backups  cache  crash  games  lib  local  lock  log  mail  opt  run  spool  tmp

#+END_SRC 

The most used flags for ls command are l, s, t, R, a.

| Flags | Purpose                                                     |
|-------+-------------------------------------------------------------|
| l     | Displays the detailed view of contents of the folder        |
| a     | Also displays the hidden contents of the folder             |
| s     | Displays the size of each of the contents of the foder      |
| R     | Displays content recursively                                |
| t     | Displays contents according to the sorted Modification time |
|-------+-------------------------------------------------------------|

#+BEGIN_SRC shell

johndoe@laptop:~/Documents$ ls -l
total 4

-rw-r--r--  1 johndoe johndoe 0 2010-08-20 22:22 example.txt
-rw-r--r--  1 johndoe johndoe 0 2010-08-20 22:22 all_about_console.txt
drwxr-xr-x  2 johndoe johndoe  4096 2010-08-02 14:03 my_project

#+END_SRC  

Describe the attributes here 

#+BEGIN_SRC shell

johndoe@laptop:~/Documents$ ls -a
.  ..  all_about_console.txt  example.txt  my_project

. and .. refer to current folder and previous folder.

johndoe@johndoe-laptop:~/Documents$ ls my_project/
vlabs_ui

johndoe@johndoe-laptop:~/Documents$ ls my_project/vlabs_ui/
css  images  index.html js  Milikan_oil_drop.html  README  simple_pendulum.html  Sys n sw.html

johndoe@laptop:~/Documents$ ls -R
.:
all_about_console.txt  example.txt  my_project=
./my_project:
vlabs_ui
./my_project/vlabs_ui:
css  images  index.html  js  Milikan_oil_drop.html  README  simple_pendulum.html  Sys n sw.html
./my_project/vlabs_ui/css:
code.css  common.css  corners.css  forms.css  layout.css  reset.css
./my_project/vlabs_ui/images:
graphic-logo.gif
./my_project/vlabs_ui/js:
nav.js

#+END_SRC                                                                     


*  Moving through directories: 

The command cd (change directory) allows us to move through directory trees. It has one parameter: target directory path. If parameter "-" is given it'll navigate to the previous working directory. If the paramter "~" is given it'll navigate to the home directory.

#+BEGIN_SRC shell

johndoe@laptop:~/Documents$ cd my_project

johndoe@laptop:~/Documents/my_project$ pwd
/home/johndoe/Documents/my_project

johndoe@laptop:~/Documents/my_project$ cd ..

johndoe@laptop:~/Documents$ cd -

johndoe@laptop:~Documents/my_project$ cd ~

johndoe@laptop:~$ pwd
/home/johndoe

johndoe@laptop:~$ cd ~james

johndoe@laptop:/home/james$ pwd
/home/james

#+END_SRC


*  Creating files and folders: 

The touch command takes one or more parameters. If the parameter is an already existing file, it's modification time will be updated, else it'll be created.

#+BEGIN_SRC shell

johndoe@laptop:~/Documents$ touch newfile.txt

johndoe@laptop:~/Documents$ ls
all_about_console.txt  example.txt my_project newfile.txt

#+END_SRC

The mkdir command takes one or more parameters and creates those folders.

#+BEGIN_SRC shell

johndoe@laptop:~/Documents$ mkdir new_folder

johndoe@laptop:~/Documents$ ls
all_about_console.txt  example.txt  my_project newfile.txt new_folder

#+END_SRC

*  Copying, Moving and removing files and folders:

 + cp - It takes at least two parameters: a source file and a target location to which the file will be copied,
 + mv - Used to change the location of directories and files or renaming them. Parameters are taken in similar way as the cp command.
 + rm - removes files/directories.

The commands: cp, mv, and rm have the following common parameters:

+ -f force - forces removing a file, even if user has no rights to write the file,
+ -i interactive - user will be asked to confirm the operation,

The commands cp, mv can also take "-b" which creates backup copy of a file to be overwritten (for cp and mv), 


*  Viewing the contents of a file:

cat - Displays the content of the given files (arguments) concatenated;

[[file:../images/simulation.jpg]]


**  Experiment

#+BEGIN_HTML
	  <div id="login"> 
 
	  <form action="javascript:loginattempt(document.getElementById('loginform'));" id="loginform"> 
 
	  <table id="logintable"><tr> 
 
	  <td>Username</td><td> <input type="text" name="username" value="" id="username"/></td></tr> 
 
	  <tr><td>Password</td> <td><input type="password" name="password" id="password"/></td></tr> 
 
	  <tr><td></td><td><input type="submit" value="Sign in" /></td></tr></table> 
 
	  </form> 
 
	  No account? <a onclick="clicksignup();" href="#">Sign up here</a> 
 
	  <br> 
 
	To login as a guest user, click <a href="#" onclick="guestlogin();">here</a>. 
 
	  </div> 
 
	  <div id="signup"> 
 
	  <div id="signup-warning"></div> 
 
	  <form action="javascript:signupattempt(document.getElementById('signupform'));" id="signupform"> 
 
	  <table><tr> 
 
	  <td>Your name</td><td> <input type="text" name="yourname" value="" id="yourname"/></td></tr> 
 
	  <td>Preferred username</td><td> <input type="text" name="preferredusername" value="" id="preferredusername"/></td></tr> 
 
	  <tr><td>Password</td> <td><input type="password" name="preferredpassword" id="preferredpassword"/></td></tr> 
 
	  <tr><td>Re-enter Password</td> <td><input type="password" name="repreferredpassword" id="repreferredpassword"/></td></tr> 
 
	  <tr><td>Email</td> <td><input type="text" name="email" id="email"/></td></tr> 
 
	  <tr><td>Re-enter Email</td> <td><input type="text" name="reemail" id="reemail"/></td></tr> 
 
	  <tr></tr> 
 
	  <tr><td colspan=2>Enter the black characters present in the below image</td></tr> 
 
	  <tr><td><img src="php/captcha.php" id="captchaimg"/></td><td><input type="text" name="captcha" id="captcha"/></td></tr> 
 
	  <tr><td></td><td><input type="submit" value="Sign up" /></td></tr> 
 
	  </table> 
 
	  </form> 
 
	  </div> 
 
	  <div id="logout"> 
 
	  <a href="#" onclick="logout();">Logout</a> 
	  </div> 
 
	  <pre id="terminal" class="code"><div id="input" class="inpcls"><form name='f' class='cmdform' action='' onsubmit="return false;" id="cmdformid"><table class="inputtable" id="inputtableid"><tr><td><div id='prompt' class='less'>user@pascal:~/$</div></td><td class="inputtd"><input id='inputfield' name='q' type='text' class='cmdline' autocomplete="off" value="" onkeypress="showHint(event,this.value)" /></td></tr></table></form><div id="output" class="outcls"></div></div></pre> 
 

#+END_HTML

 
=Now that we have learnt shell commands to do basic file management, we have an exercise for you.=

=The shell above supports few basic shell commands. Play along to get some hands-on experience of the interface.=

=When you are ready to perform the exercise, which is a set of 5 tasks, enter the command "start".=



=try: start,next,prev,clear,logout.=


[[file:../images/quizzes.jpg]]

** Quiz
   
  1. The command "rm xyz" is enough to delete the directory xyz containing subdirectories. True or false?

  2. Permission for a file "-rw-r--r--" means it can be executed by anyone in the group. True or false?

  3. The pwd command gives the absolute path of the current directory. True or false?

  4. The latest edited file/folder comes last in the output of ls -t. True or false?

  5.In the output of ls -l, the second column for directories denotes which one of the following:
     -  No of subdirectories
     -  No of subdirectories + No. of files int the directory
     -  No of subdirectories including hidden directories

[[file:../images/readings.jpg]]

** Further Readings

  + http://polishlinux.org/console/file-management-in-linux/
  + ls man page
  + http://people.ischool.berkeley.edu/~kevin/unix-tutorial/section3.html
  + http://people.ischool.berkeley.edu/~kevin/unix-tutorial/section4.html
  +  http://www.devdaily.com/unix/edu/IntroToUnix/node7.shtml

[[file:../images/readings.jpg]]

** Feedback 

 Please provide us  feedback [[https://spreadsheets.google.com/viewform?formkey=dGR6RHRQamxRcGZNYnZQYmlPNWlfSUE6MQ][here]]
